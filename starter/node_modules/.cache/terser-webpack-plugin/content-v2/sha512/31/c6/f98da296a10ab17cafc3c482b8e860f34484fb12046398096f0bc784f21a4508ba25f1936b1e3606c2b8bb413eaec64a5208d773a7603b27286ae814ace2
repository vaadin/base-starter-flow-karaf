{"code":"!function(e){var t={};function n(s){if(t[s])return t[s].exports;var r=t[s]={i:s,l:!1,exports:{}};return e[s].call(r.exports,r,r.exports,n),r.l=!0,r.exports}n.m=e,n.c=t,n.d=function(e,t,s){n.o(e,t)||Object.defineProperty(e,t,{enumerable:!0,get:s})},n.r=function(e){\"undefined\"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:\"Module\"}),Object.defineProperty(e,\"__esModule\",{value:!0})},n.t=function(e,t){if(1&t&&(e=n(e)),8&t)return e;if(4&t&&\"object\"==typeof e&&e&&e.__esModule)return e;var s=Object.create(null);if(n.r(s),Object.defineProperty(s,\"default\",{enumerable:!0,value:e}),2&t&&\"string\"!=typeof e)for(var r in e)n.d(s,r,function(t){return e[t]}.bind(null,r));return s},n.n=function(e){var t=e&&e.__esModule?function(){return e.default}:function(){return e};return n.d(t,\"a\",t),t},n.o=function(e,t){return Object.prototype.hasOwnProperty.call(e,t)},n.p=\"\",n(n.s=4)}([function(e,t,n){\"use strict\";try{self[\"workbox:core:5.1.4\"]&&_()}catch(e){}},function(e,t,n){\"use strict\";try{self[\"workbox:precaching:5.1.4\"]&&_()}catch(e){}},function(e,t,n){\"use strict\";try{self[\"workbox:routing:5.1.4\"]&&_()}catch(e){}},function(e,t,n){\"use strict\";try{self[\"workbox:strategies:5.1.4\"]&&_()}catch(e){}},function(e,t,n){\"use strict\";n.r(t);n(0);const s=(e,...t)=>{let n=e;return t.length>0&&(n+=\" :: \"+JSON.stringify(t)),n};class r extends Error{constructor(e,t){super(s(e,t)),this.name=e,this.details=t}}const o=new Set;const a={googleAnalytics:\"googleAnalytics\",precache:\"precache-v2\",prefix:\"workbox\",runtime:\"runtime\",suffix:\"undefined\"!=typeof registration?registration.scope:\"\"},i=e=>[a.prefix,e,a.suffix].filter(e=>e&&e.length>0).join(\"-\"),c=e=>e||i(a.precache);const l=e=>new URL(String(e),location.href).href.replace(new RegExp(\"^\"+location.origin),\"\"),h=(e,t)=>e.filter(e=>t in e),u=async({request:e,mode:t,plugins:n=[]})=>{const s=h(n,\"cacheKeyWillBeUsed\");let r=e;for(const e of s)r=await e.cacheKeyWillBeUsed.call(e,{mode:t,request:r}),\"string\"==typeof r&&(r=new Request(r));return r},d=async({cacheName:e,request:t,event:n,matchOptions:s,plugins:r=[]})=>{const o=await self.caches.open(e),a=await u({plugins:r,request:t,mode:\"read\"});let i=await o.match(a,s);for(const t of r)if(\"cachedResponseWillBeUsed\"in t){const r=t.cachedResponseWillBeUsed;i=await r.call(t,{cacheName:e,event:n,matchOptions:s,cachedResponse:i,request:a})}return i},f=async({cacheName:e,request:t,response:n,event:s,plugins:a=[],matchOptions:i})=>{const c=await u({plugins:a,request:t,mode:\"write\"});if(!n)throw new r(\"cache-put-with-no-response\",{url:l(c.url)});const f=await(async({request:e,response:t,event:n,plugins:s=[]})=>{let r=t,o=!1;for(const t of s)if(\"cacheWillUpdate\"in t){o=!0;const s=t.cacheWillUpdate;if(r=await s.call(t,{request:e,response:r,event:n}),!r)break}return o||(r=r&&200===r.status?r:void 0),r||null})({event:s,plugins:a,response:n,request:c});if(!f)return void 0;const p=await self.caches.open(e),y=h(a,\"cacheDidUpdate\"),g=y.length>0?await d({cacheName:e,matchOptions:i,request:c}):null;try{await p.put(c,f)}catch(e){throw\"QuotaExceededError\"===e.name&&await async function(){for(const e of o)await e()}(),e}for(const t of y)await t.cacheDidUpdate.call(t,{cacheName:e,event:s,oldResponse:g,newResponse:f,request:c})};let p;class y{constructor(e,t,{onupgradeneeded:n,onversionchange:s}={}){this._db=null,this._name=e,this._version=t,this._onupgradeneeded=n,this._onversionchange=s||(()=>this.close())}get db(){return this._db}async open(){if(!this._db)return this._db=await new Promise((e,t)=>{let n=!1;setTimeout(()=>{n=!0,t(new Error(\"The open request was blocked and timed out\"))},this.OPEN_TIMEOUT);const s=indexedDB.open(this._name,this._version);s.onerror=()=>t(s.error),s.onupgradeneeded=e=>{n?(s.transaction.abort(),s.result.close()):\"function\"==typeof this._onupgradeneeded&&this._onupgradeneeded(e)},s.onsuccess=()=>{const t=s.result;n?t.close():(t.onversionchange=this._onversionchange.bind(this),e(t))}}),this}async getKey(e,t){return(await this.getAllKeys(e,t,1))[0]}async getAll(e,t,n){return await this.getAllMatching(e,{query:t,count:n})}async getAllKeys(e,t,n){return(await this.getAllMatching(e,{query:t,count:n,includeKeys:!0})).map(e=>e.key)}async getAllMatching(e,{index:t,query:n=null,direction:s=\"next\",count:r,includeKeys:o=!1}={}){return await this.transaction([e],\"readonly\",(a,i)=>{const c=a.objectStore(e),l=t?c.index(t):c,h=[],u=l.openCursor(n,s);u.onsuccess=()=>{const e=u.result;e?(h.push(o?e:e.value),r&&h.length>=r?i(h):e.continue()):i(h)}})}async transaction(e,t,n){return await this.open(),await new Promise((s,r)=>{const o=this._db.transaction(e,t);o.onabort=()=>r(o.error),o.oncomplete=()=>s(),n(o,e=>s(e))})}async _call(e,t,n,...s){return await this.transaction([t],n,(n,r)=>{const o=n.objectStore(t),a=o[e].apply(o,s);a.onsuccess=()=>r(a.result)})}close(){this._db&&(this._db.close(),this._db=null)}}y.prototype.OPEN_TIMEOUT=2e3;const g={readonly:[\"get\",\"count\",\"getKey\",\"getAll\",\"getAllKeys\"],readwrite:[\"add\",\"put\",\"clear\",\"delete\"]};for(const[e,t]of Object.entries(g))for(const n of t)n in IDBObjectStore.prototype&&(y.prototype[n]=async function(t,...s){return await this._call(n,t,e,...s)});const w=async({request:e,fetchOptions:t,event:n,plugins:s=[]})=>{if(\"string\"==typeof e&&(e=new Request(e)),n instanceof FetchEvent&&n.preloadResponse){const e=await n.preloadResponse;if(e)return e}const o=h(s,\"fetchDidFail\"),a=o.length>0?e.clone():null;try{for(const t of s)if(\"requestWillFetch\"in t){const s=t.requestWillFetch,r=e.clone();e=await s.call(t,{request:r,event:n})}}catch(e){throw new r(\"plugin-error-request-will-fetch\",{thrownError:e})}const i=e.clone();try{let r;r=\"navigate\"===e.mode?await fetch(e):await fetch(e,t);for(const e of s)\"fetchDidSucceed\"in e&&(r=await e.fetchDidSucceed.call(e,{event:n,request:i,response:r}));return r}catch(e){0;for(const t of o)await t.fetchDidFail.call(t,{error:e,event:n,originalRequest:a.clone(),request:i.clone()});throw e}};async function m(e,t){const n=e.clone(),s={headers:new Headers(n.headers),status:n.status,statusText:n.statusText},r=t?t(s):s,o=function(){if(void 0===p){const e=new Response(\"\");if(\"body\"in e)try{new Response(e.body),p=!0}catch(e){p=!1}p=!1}return p}()?n.body:await n.blob();return new Response(o,r)}n(1);const _=[],v={get:()=>_,add(e){_.push(...e)}};function R(e){if(!e)throw new r(\"add-to-cache-list-unexpected-type\",{entry:e});if(\"string\"==typeof e){const t=new URL(e,location.href);return{cacheKey:t.href,url:t.href}}const{revision:t,url:n}=e;if(!n)throw new r(\"add-to-cache-list-unexpected-type\",{entry:e});if(!t){const e=new URL(n,location.href);return{cacheKey:e.href,url:e.href}}const s=new URL(n,location.href),o=new URL(n,location.href);return s.searchParams.set(\"__WB_REVISION__\",t),{cacheKey:s.href,url:o.href}}class b{constructor(e){this._cacheName=c(e),this._urlsToCacheKeys=new Map,this._urlsToCacheModes=new Map,this._cacheKeysToIntegrities=new Map}addToCacheList(e){const t=[];for(const n of e){\"string\"==typeof n?t.push(n):n&&void 0===n.revision&&t.push(n.url);const{cacheKey:e,url:s}=R(n),o=\"string\"!=typeof n&&n.revision?\"reload\":\"default\";if(this._urlsToCacheKeys.has(s)&&this._urlsToCacheKeys.get(s)!==e)throw new r(\"add-to-cache-list-conflicting-entries\",{firstEntry:this._urlsToCacheKeys.get(s),secondEntry:e});if(\"string\"!=typeof n&&n.integrity){if(this._cacheKeysToIntegrities.has(e)&&this._cacheKeysToIntegrities.get(e)!==n.integrity)throw new r(\"add-to-cache-list-conflicting-integrities\",{url:s});this._cacheKeysToIntegrities.set(e,n.integrity)}if(this._urlsToCacheKeys.set(s,e),this._urlsToCacheModes.set(s,o),t.length>0){const e=`Workbox is precaching URLs without revision info: ${t.join(\", \")}\\nThis is generally NOT safe. Learn more at https://bit.ly/wb-precache`;console.warn(e)}}}async install({event:e,plugins:t}={}){const n=[],s=[],r=await self.caches.open(this._cacheName),o=await r.keys(),a=new Set(o.map(e=>e.url));for(const[e,t]of this._urlsToCacheKeys)a.has(t)?s.push(e):n.push({cacheKey:t,url:e});const i=n.map(({cacheKey:n,url:s})=>{const r=this._cacheKeysToIntegrities.get(n),o=this._urlsToCacheModes.get(s);return this._addURLToCache({cacheKey:n,cacheMode:o,event:e,integrity:r,plugins:t,url:s})});await Promise.all(i);return{updatedURLs:n.map(e=>e.url),notUpdatedURLs:s}}async activate(){const e=await self.caches.open(this._cacheName),t=await e.keys(),n=new Set(this._urlsToCacheKeys.values()),s=[];for(const r of t)n.has(r.url)||(await e.delete(r),s.push(r.url));return{deletedURLs:s}}async _addURLToCache({cacheKey:e,url:t,cacheMode:n,event:s,plugins:o,integrity:a}){const i=new Request(t,{integrity:a,cache:n,credentials:\"same-origin\"});let c,l=await w({event:s,plugins:o,request:i});for(const e of o||[])\"cacheWillUpdate\"in e&&(c=e);if(!(c?await c.cacheWillUpdate({event:s,request:i,response:l}):l.status<400))throw new r(\"bad-precaching-response\",{url:t,status:l.status});l.redirected&&(l=await m(l)),await f({event:s,plugins:o,response:l,request:e===t?i:new Request(e),cacheName:this._cacheName,matchOptions:{ignoreSearch:!0}})}getURLsToCacheKeys(){return this._urlsToCacheKeys}getCachedURLs(){return[...this._urlsToCacheKeys.keys()]}getCacheKeyForURL(e){const t=new URL(e,location.href);return this._urlsToCacheKeys.get(t.href)}async matchPrecache(e){const t=e instanceof Request?e.url:e,n=this.getCacheKeyForURL(t);if(n){return(await self.caches.open(this._cacheName)).match(n)}}createHandler(e=!0){return async({request:t})=>{try{const e=await this.matchPrecache(t);if(e)return e;throw new r(\"missing-precache-entry\",{cacheName:this._cacheName,url:t instanceof Request?t.url:t})}catch(n){if(e)return fetch(t);throw n}}}createHandlerBoundToURL(e,t=!0){if(!this.getCacheKeyForURL(e))throw new r(\"non-precached-url\",{url:e});const n=this.createHandler(t),s=new Request(e);return()=>n({request:s})}}let q;const L=()=>(q||(q=new b),q);const U=(e,t)=>{const n=L().getURLsToCacheKeys();for(const s of function*(e,{ignoreURLParametersMatching:t,directoryIndex:n,cleanURLs:s,urlManipulation:r}={}){const o=new URL(e,location.href);o.hash=\"\",yield o.href;const a=function(e,t=[]){for(const n of[...e.searchParams.keys()])t.some(e=>e.test(n))&&e.searchParams.delete(n);return e}(o,t);if(yield a.href,n&&a.pathname.endsWith(\"/\")){const e=new URL(a.href);e.pathname+=n,yield e.href}if(s){const e=new URL(a.href);e.pathname+=\".html\",yield e.href}if(r){const e=r({url:o});for(const t of e)yield t.href}}(e,t)){const e=n.get(s);if(e)return e}};let T=!1;function x(e){T||((({ignoreURLParametersMatching:e=[/^utm_/],directoryIndex:t=\"index.html\",cleanURLs:n=!0,urlManipulation:s}={})=>{const r=c();self.addEventListener(\"fetch\",o=>{const a=U(o.request.url,{cleanURLs:n,directoryIndex:t,ignoreURLParametersMatching:e,urlManipulation:s});if(!a)return void 0;let i=self.caches.open(r).then(e=>e.match(a)).then(e=>e||fetch(a));o.respondWith(i)})})(e),T=!0)}function K(e){return L().matchPrecache(e)}const M=e=>{const t=L(),n=v.get();e.waitUntil(t.install({event:e,plugins:n}).catch(e=>{throw e}))},C=e=>{const t=L();e.waitUntil(t.activate())};n(2);const E=e=>e&&\"object\"==typeof e?e:{handle:e};class O{constructor(e,t,n=\"GET\"){this.handler=E(t),this.match=e,this.method=n}}class N extends O{constructor(e,t,n){super(({url:t})=>{const n=e.exec(t.href);if(n&&(t.origin===location.origin||0===n.index))return n.slice(1)},t,n)}}class P{constructor(){this._routes=new Map}get routes(){return this._routes}addFetchListener(){self.addEventListener(\"fetch\",e=>{const{request:t}=e,n=this.handleRequest({request:t,event:e});n&&e.respondWith(n)})}addCacheListener(){self.addEventListener(\"message\",e=>{if(e.data&&\"CACHE_URLS\"===e.data.type){const{payload:t}=e.data;0;const n=Promise.all(t.urlsToCache.map(e=>{\"string\"==typeof e&&(e=[e]);const t=new Request(...e);return this.handleRequest({request:t})}));e.waitUntil(n),e.ports&&e.ports[0]&&n.then(()=>e.ports[0].postMessage(!0))}})}handleRequest({request:e,event:t}){const n=new URL(e.url,location.href);if(!n.protocol.startsWith(\"http\"))return void 0;const{params:s,route:r}=this.findMatchingRoute({url:n,request:e,event:t});let o=r&&r.handler;if(!o&&this._defaultHandler&&(o=this._defaultHandler),!o)return void 0;let a;try{a=o.handle({url:n,request:e,event:t,params:s})}catch(e){a=Promise.reject(e)}return a instanceof Promise&&this._catchHandler&&(a=a.catch(s=>this._catchHandler.handle({url:n,request:e,event:t}))),a}findMatchingRoute({url:e,request:t,event:n}){const s=this._routes.get(t.method)||[];for(const r of s){let s;const o=r.match({url:e,request:t,event:n});if(o)return s=o,(Array.isArray(o)&&0===o.length||o.constructor===Object&&0===Object.keys(o).length||\"boolean\"==typeof o)&&(s=void 0),{route:r,params:s}}return{}}setDefaultHandler(e){this._defaultHandler=E(e)}setCatchHandler(e){this._catchHandler=E(e)}registerRoute(e){this._routes.has(e.method)||this._routes.set(e.method,[]),this._routes.get(e.method).push(e)}unregisterRoute(e){if(!this._routes.has(e.method))throw new r(\"unregister-route-but-not-found-with-method\",{method:e.method});const t=this._routes.get(e.method).indexOf(e);if(!(t>-1))throw new r(\"unregister-route-route-not-registered\");this._routes.get(e.method).splice(t,1)}}let S;const j=()=>(S||(S=new P,S.addFetchListener(),S.addCacheListener()),S);n(3);importScripts(\"sw-runtime-resources-precache.js\"),self.addEventListener(\"install\",()=>self.skipWaiting()),self.addEventListener(\"activate\",()=>self.clients.claim());const W=async e=>{const t=await e.text();return new Response(t.replace(/<base\\s+href=[^>]*>/,`<base href=\"${self.registration.scope}\">`),e)},k=new class{constructor(e={}){this._plugins=e.plugins||[],this._fetchOptions=e.fetchOptions}async handle({event:e,request:t}){let n,s;\"string\"==typeof t&&(t=new Request(t));try{s=await w({request:t,event:e,fetchOptions:this._fetchOptions,plugins:this._plugins})}catch(e){n=e}if(!s)throw new r(\"no-response\",{url:t.url,error:n});return s}};let A=!1;!function(e,t,n){let s;if(\"string\"==typeof e){const r=new URL(e,location.href);0;s=new O(({url:e})=>e.href===r.href,t,n)}else if(e instanceof RegExp)s=new N(e,t,n);else if(\"function\"==typeof e)s=new O(e,t,n);else{if(!(e instanceof O))throw new r(\"unsupported-route-type\",{moduleName:\"workbox-routing\",funcName:\"registerRoute\",paramName:\"capture\"});s=e}j().registerRoute(s)}(new class extends O{constructor(e,{allowlist:t=[/./],denylist:n=[]}={}){super(e=>this._match(e),e),this._allowlist=t,this._denylist=n}_match({url:e,request:t}){if(t&&\"navigate\"!==t.mode)return!1;const n=e.pathname+e.search;for(const e of this._denylist)if(e.test(n))return!1;return!!this._allowlist.some(e=>e.test(n))}}(async e=>{if(!self.navigator.onLine){const e=await K(\".\");if(e)return W(e)}try{const t=await k.handle(e);return A=!1,t}catch(e){A=!0;const t=await K(\".\");return t?await W(t):e}}));let I=self.__WB_MANIFEST;var H;self.additionalManifestEntries&&self.additionalManifestEntries.length&&(I=[...I,...self.additionalManifestEntries]),function(e){L().addToCacheList(e),e.length>0&&(self.addEventListener(\"install\",M),self.addEventListener(\"activate\",C))}(I),x(H),self.addEventListener(\"message\",e=>{var t;\"object\"==typeof e.data&&\"method\"in e.data&&\"Vaadin.ServiceWorker.isConnectionLost\"===e.data.method&&\"id\"in e.data&&(null===(t=e.source)||void 0===t||t.postMessage({id:e.data.id,result:A},[]))})}]);","extractedComments":[]}